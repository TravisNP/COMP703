The Curry-Howard correspondence describes a many-to-one relationship between mathematical proofs and computer programs. In this presentation, we first present our algorithm to take a theorem, consisting of the four basic logical operators, to a proof in constructive logic, followed by describing the proof to abstract program rules. Next, we outline our implementation of the theorem prover, program extractor, and a method of porting the abstract program to OCaml code. Finally, we demonstrate the process by tracing through several examples, showing the transformation from theorem to OCaml code.
