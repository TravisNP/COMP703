Title: Automatic Theorem Proving and an Implementation of the Curry-Howard Correspondence
Authors: Travis Pence, Lao Chang

The Curry-Howard correspondence describes a one-to-one relationship between mathematical proofs and computer programs, enabling for mathematically correct code generation. This allows for the representation of functions as theorems consisting of four basic logical operators: and, or, not, and implication. In this presentation, we first present our algorithm to generate a constructive proof provided a theorem. Next, we outline our implementation of the theorem prover, the extraction of the program from the proof using the Curry-Howard correspondence, and a code synthesizer to take the abstract program format to OCaml code. Finally, we demonstrate the process by tracing through several examples, showing the transformation from theorem to OCaml code.
